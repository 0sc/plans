{"docs":{"name":"Plans","info":"","copyright":"\u0026copy; 2015 Oscar | Andela","doc_url":"../../../docs/1.0","api_url":"","resources":[{"doc_url":"../../../docs/1.0/users","api_url":"","name":"Users","short_description":"Managing User profile","full_description":"","version":"1.0","formats":null,"metadata":null,"methods":[{"doc_url":"../../../docs/1.0/users/update","name":"update","apis":[{"api_url":"/users","http_method":"PATCH","short_description":"Update User information","deprecated":null}],"formats":["json"],"full_description":"\n\u003cp\u003eUpdate User Profile\u003c/p\u003e\n\n\u003cp\u003eThis endpoint is used to update the user profile details.\u003c/p\u003e\n\n\u003cp\u003eAuthentication token has to be passed as part of the request. It must be passed as HTTP header(TOKEN).\u003c/p\u003e\n","errors":[{"code":401,"description":"Unauthorized. Token is probably invalid.","metadata":null},{"code":422,"description":"Invalid parameter sent","metadata":null},{"code":400,"description":"Empty request params","metadata":null}],"params":[{"name":"user","full_name":"user","description":"","required":false,"allow_nil":false,"validator":"Must be a Hash","expected_type":"hash","metadata":null,"show":true,"params":[{"name":"email","full_name":"user[email]","description":"\n\u003cp\u003eEmail for login\u003c/p\u003e\n","required":false,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"name","full_name":"user[name]","description":"","required":false,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true},{"name":"password","full_name":"user[password]","description":"\n\u003cp\u003epassword for login\u003c/p\u003e\n","required":false,"allow_nil":false,"validator":"Must be String","expected_type":"string","metadata":null,"show":true}]}],"examples":["// Returns 422 for request with invalid email\nPATCH /users\n{\n  \"user\": {\n    \"name\": \"Milo Kemmer I\",\n    \"email\": \"4546$%$\",\n    \"password\": \"4xbe806agqv\"\n  }\n}\n422\n{\n  \"users\": [\n    \"Email is invalid\"\n  ]\n}","// Returns 401 for request with invalid token\nPATCH /users\n{\n  \"user\": {\n    \"name\": \"\",\n    \"email\": \"yeenia@kaulke.name\",\n    \"password\": \"password\"\n  }\n}\n401","// Returns 422 for request with empty params\nPATCH /users\n{\n  \"user\": {\n    \"name\": \"\",\n    \"email\": \"\",\n    \"password\": \"\"\n  }\n}\n422\n{\n  \"users\": [\n    \"Name can't be blank\",\n    \"Name is too short (minimum is 2 characters)\",\n    \"Email can't be blank\",\n    \"Email is invalid\"\n  ]\n}","// Returns 400 for request without strong params\nPATCH /users\n{\n  \"name\": \"NewName\",\n  \"email\": \"new@email.com\",\n  \"password\": \"newpass\"\n}\n400\n{\n  \"user\": {\n    \"name\": \"Darlene Sporer\",\n    \"email\": \"yeenia@kaulke.name\",\n    \"created_at\": \"2015-11-30T01:18:54.475Z\",\n    \"updated_at\": \"2015-11-30T01:18:54.499Z\"\n  }\n}","// Returns 200 for request with valid params\nPATCH /users\n{\n  \"user\": {\n    \"name\": \"Eladio Schaefer\",\n    \"email\": \"email@email.com\",\n    \"password\": \"uysy4ba18iu\"\n  }\n}\n200\n{\n  \"user\": {\n    \"name\": \"Eladio Schaefer\",\n    \"email\": \"email@email.com\",\n    \"created_at\": \"2015-11-30T01:18:54.615Z\",\n    \"updated_at\": \"2015-11-30T01:18:54.742Z\"\n  }\n}","// Returns 422 if request params is empty\nPATCH /users\n{\n  \"user\": {\n    \"name\": \"\",\n    \"email\": \"\",\n    \"password\": \"\"\n  }\n}\n422\n{\n  \"users\": [\n    \"Name can't be blank\",\n    \"Name is too short (minimum is 2 characters)\",\n    \"Email can't be blank\",\n    \"Email is invalid\"\n  ]\n}"],"metadata":null,"see":[],"headers":[],"show":true}],"headers":[]}],"link_extension":".html"}}